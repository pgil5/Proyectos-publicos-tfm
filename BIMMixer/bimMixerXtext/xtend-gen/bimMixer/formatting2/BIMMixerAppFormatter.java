/**
 * generated by Xtext 2.23.0
 */
package bimMixer.formatting2;

import BIMMixer.BIMCertification;
import BIMMixer.BIMMixerApp;
import BIMMixer.BreeamCertification;
import BIMMixer.Category;
import bimMixer.services.BIMMixerAppGrammarAccess;
import com.google.inject.Inject;
import java.util.Arrays;
import org.eclipse.emf.common.util.EList;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.formatting2.AbstractFormatter2;
import org.eclipse.xtext.formatting2.IFormattableDocument;
import org.eclipse.xtext.resource.XtextResource;
import org.eclipse.xtext.xbase.lib.Extension;

@SuppressWarnings("all")
public class BIMMixerAppFormatter extends AbstractFormatter2 {
  @Inject
  @Extension
  private BIMMixerAppGrammarAccess _bIMMixerAppGrammarAccess;
  
  protected void _format(final BIMMixerApp bIMMixerApp, @Extension final IFormattableDocument document) {
    EList<BIMCertification> _certifications = bIMMixerApp.getCertifications();
    for (final BIMCertification bIMCertification : _certifications) {
      document.<BIMCertification>format(bIMCertification);
    }
  }
  
  protected void _format(final BreeamCertification breeamCertification, @Extension final IFormattableDocument document) {
    EList<Category> _categories = breeamCertification.getCategories();
    for (final Category category : _categories) {
      document.<Category>format(category);
    }
  }
  
  public void format(final Object breeamCertification, final IFormattableDocument document) {
    if (breeamCertification instanceof XtextResource) {
      _format((XtextResource)breeamCertification, document);
      return;
    } else if (breeamCertification instanceof BreeamCertification) {
      _format((BreeamCertification)breeamCertification, document);
      return;
    } else if (breeamCertification instanceof BIMMixerApp) {
      _format((BIMMixerApp)breeamCertification, document);
      return;
    } else if (breeamCertification instanceof EObject) {
      _format((EObject)breeamCertification, document);
      return;
    } else if (breeamCertification == null) {
      _format((Void)null, document);
      return;
    } else if (breeamCertification != null) {
      _format(breeamCertification, document);
      return;
    } else {
      throw new IllegalArgumentException("Unhandled parameter types: " +
        Arrays.<Object>asList(breeamCertification, document).toString());
    }
  }
}
