/*
 * generated by Xtext 2.23.0
 */
package bimMixer.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class BIMMixerAppGrammarAccess extends AbstractElementFinder.AbstractGrammarElementFinder {
	
	public class BIMMixerAppElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "bimMixer.BIMMixerApp.BIMMixerApp");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cBIMMixerAppAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cBIMMixerAppKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cColonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Assignment cCertificationsAssignment_4_0 = (Assignment)cGroup_4.eContents().get(0);
		private final RuleCall cCertificationsBIMCertificationParserRuleCall_4_0_0 = (RuleCall)cCertificationsAssignment_4_0.eContents().get(0);
		private final Assignment cCertificationsAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cCertificationsBIMCertificationParserRuleCall_4_1_0 = (RuleCall)cCertificationsAssignment_4_1.eContents().get(0);
		
		//BIMMixerApp:
		//	{BIMMixerApp}
		//	'BIMMixerApp'
		//	name=EString
		//	':' (certifications+=BIMCertification certifications+=BIMCertification*)?;
		@Override public ParserRule getRule() { return rule; }
		
		//{BIMMixerApp} 'BIMMixerApp' name=EString ':' (certifications+=BIMCertification certifications+=BIMCertification*)?
		public Group getGroup() { return cGroup; }
		
		//{BIMMixerApp}
		public Action getBIMMixerAppAction_0() { return cBIMMixerAppAction_0; }
		
		//'BIMMixerApp'
		public Keyword getBIMMixerAppKeyword_1() { return cBIMMixerAppKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//':'
		public Keyword getColonKeyword_3() { return cColonKeyword_3; }
		
		//(certifications+=BIMCertification certifications+=BIMCertification*)?
		public Group getGroup_4() { return cGroup_4; }
		
		//certifications+=BIMCertification
		public Assignment getCertificationsAssignment_4_0() { return cCertificationsAssignment_4_0; }
		
		//BIMCertification
		public RuleCall getCertificationsBIMCertificationParserRuleCall_4_0_0() { return cCertificationsBIMCertificationParserRuleCall_4_0_0; }
		
		//certifications+=BIMCertification*
		public Assignment getCertificationsAssignment_4_1() { return cCertificationsAssignment_4_1; }
		
		//BIMCertification
		public RuleCall getCertificationsBIMCertificationParserRuleCall_4_1_0() { return cCertificationsBIMCertificationParserRuleCall_4_1_0; }
	}
	public class BIMCertificationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "bimMixer.BIMMixerApp.BIMCertification");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cBreeamCertificationParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cLEEDCertificationParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//BIMCertification:
		//	BreeamCertification | LEEDCertification;
		@Override public ParserRule getRule() { return rule; }
		
		//BreeamCertification | LEEDCertification
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//BreeamCertification
		public RuleCall getBreeamCertificationParserRuleCall_0() { return cBreeamCertificationParserRuleCall_0; }
		
		//LEEDCertification
		public RuleCall getLEEDCertificationParserRuleCall_1() { return cLEEDCertificationParserRuleCall_1; }
	}
	public class BreeamCertificationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "bimMixer.BIMMixerApp.BreeamCertification");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cBreeamCertificationKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cCategoriesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cCategoriesCategoryParserRuleCall_3_0 = (RuleCall)cCategoriesAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cCommaKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cCategoriesAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cCategoriesCategoryParserRuleCall_4_1_0 = (RuleCall)cCategoriesAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cConnectedCertificationKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cConnectedCertificationAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final CrossReference cConnectedCertificationBIMCertificationCrossReference_5_1_0 = (CrossReference)cConnectedCertificationAssignment_5_1.eContents().get(0);
		private final RuleCall cConnectedCertificationBIMCertificationEStringParserRuleCall_5_1_0_1 = (RuleCall)cConnectedCertificationBIMCertificationCrossReference_5_1_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//BreeamCertification:
		//	'BreeamCertification'
		//	name=EString
		//	'{'
		//	Categories+=Category ("," Categories+=Category)* ('connectedCertification:'
		//	connectedCertification=[BIMCertification|EString])?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'BreeamCertification' name=EString '{' Categories+=Category ("," Categories+=Category)* ('connectedCertification:'
		//connectedCertification=[BIMCertification|EString])? '}'
		public Group getGroup() { return cGroup; }
		
		//'BreeamCertification'
		public Keyword getBreeamCertificationKeyword_0() { return cBreeamCertificationKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//Categories+=Category
		public Assignment getCategoriesAssignment_3() { return cCategoriesAssignment_3; }
		
		//Category
		public RuleCall getCategoriesCategoryParserRuleCall_3_0() { return cCategoriesCategoryParserRuleCall_3_0; }
		
		//("," Categories+=Category)*
		public Group getGroup_4() { return cGroup_4; }
		
		//","
		public Keyword getCommaKeyword_4_0() { return cCommaKeyword_4_0; }
		
		//Categories+=Category
		public Assignment getCategoriesAssignment_4_1() { return cCategoriesAssignment_4_1; }
		
		//Category
		public RuleCall getCategoriesCategoryParserRuleCall_4_1_0() { return cCategoriesCategoryParserRuleCall_4_1_0; }
		
		//('connectedCertification:' connectedCertification=[BIMCertification|EString])?
		public Group getGroup_5() { return cGroup_5; }
		
		//'connectedCertification:'
		public Keyword getConnectedCertificationKeyword_5_0() { return cConnectedCertificationKeyword_5_0; }
		
		//connectedCertification=[BIMCertification|EString]
		public Assignment getConnectedCertificationAssignment_5_1() { return cConnectedCertificationAssignment_5_1; }
		
		//[BIMCertification|EString]
		public CrossReference getConnectedCertificationBIMCertificationCrossReference_5_1_0() { return cConnectedCertificationBIMCertificationCrossReference_5_1_0; }
		
		//EString
		public RuleCall getConnectedCertificationBIMCertificationEStringParserRuleCall_5_1_0_1() { return cConnectedCertificationBIMCertificationEStringParserRuleCall_5_1_0_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class LEEDCertificationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "bimMixer.BIMMixerApp.LEEDCertification");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLEEDCertificationKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cCategoriesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cCategoriesCategoryParserRuleCall_3_0 = (RuleCall)cCategoriesAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cCommaKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cCategoriesAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cCategoriesCategoryParserRuleCall_4_1_0 = (RuleCall)cCategoriesAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cConnectedCertificationKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cConnectedCertificationAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final CrossReference cConnectedCertificationBIMCertificationCrossReference_5_1_0 = (CrossReference)cConnectedCertificationAssignment_5_1.eContents().get(0);
		private final RuleCall cConnectedCertificationBIMCertificationEStringParserRuleCall_5_1_0_1 = (RuleCall)cConnectedCertificationBIMCertificationCrossReference_5_1_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//LEEDCertification:
		//	'LEEDCertification'
		//	name=EString
		//	'{'
		//	Categories+=Category ("," Categories+=Category)* ('connectedCertification:'
		//	connectedCertification=[BIMCertification|EString])?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'LEEDCertification' name=EString '{' Categories+=Category ("," Categories+=Category)* ('connectedCertification:'
		//connectedCertification=[BIMCertification|EString])? '}'
		public Group getGroup() { return cGroup; }
		
		//'LEEDCertification'
		public Keyword getLEEDCertificationKeyword_0() { return cLEEDCertificationKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//Categories+=Category
		public Assignment getCategoriesAssignment_3() { return cCategoriesAssignment_3; }
		
		//Category
		public RuleCall getCategoriesCategoryParserRuleCall_3_0() { return cCategoriesCategoryParserRuleCall_3_0; }
		
		//("," Categories+=Category)*
		public Group getGroup_4() { return cGroup_4; }
		
		//","
		public Keyword getCommaKeyword_4_0() { return cCommaKeyword_4_0; }
		
		//Categories+=Category
		public Assignment getCategoriesAssignment_4_1() { return cCategoriesAssignment_4_1; }
		
		//Category
		public RuleCall getCategoriesCategoryParserRuleCall_4_1_0() { return cCategoriesCategoryParserRuleCall_4_1_0; }
		
		//('connectedCertification:' connectedCertification=[BIMCertification|EString])?
		public Group getGroup_5() { return cGroup_5; }
		
		//'connectedCertification:'
		public Keyword getConnectedCertificationKeyword_5_0() { return cConnectedCertificationKeyword_5_0; }
		
		//connectedCertification=[BIMCertification|EString]
		public Assignment getConnectedCertificationAssignment_5_1() { return cConnectedCertificationAssignment_5_1; }
		
		//[BIMCertification|EString]
		public CrossReference getConnectedCertificationBIMCertificationCrossReference_5_1_0() { return cConnectedCertificationBIMCertificationCrossReference_5_1_0; }
		
		//EString
		public RuleCall getConnectedCertificationBIMCertificationEStringParserRuleCall_5_1_0_1() { return cConnectedCertificationBIMCertificationEStringParserRuleCall_5_1_0_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class CategoryElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "bimMixer.BIMMixerApp.Category");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCategoryKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cSubCategoriesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cSubCategoriesSubcategoryParserRuleCall_3_0 = (RuleCall)cSubCategoriesAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cCommaKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cSubCategoriesAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cSubCategoriesSubcategoryParserRuleCall_4_1_0 = (RuleCall)cSubCategoriesAssignment_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Category:
		//	'Category'
		//	name=EString
		//	'{'
		//	subCategories+=Subcategory ("," subCategories+=Subcategory)*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Category' name=EString '{' subCategories+=Subcategory ("," subCategories+=Subcategory)* '}'
		public Group getGroup() { return cGroup; }
		
		//'Category'
		public Keyword getCategoryKeyword_0() { return cCategoryKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//subCategories+=Subcategory
		public Assignment getSubCategoriesAssignment_3() { return cSubCategoriesAssignment_3; }
		
		//Subcategory
		public RuleCall getSubCategoriesSubcategoryParserRuleCall_3_0() { return cSubCategoriesSubcategoryParserRuleCall_3_0; }
		
		//("," subCategories+=Subcategory)*
		public Group getGroup_4() { return cGroup_4; }
		
		//","
		public Keyword getCommaKeyword_4_0() { return cCommaKeyword_4_0; }
		
		//subCategories+=Subcategory
		public Assignment getSubCategoriesAssignment_4_1() { return cSubCategoriesAssignment_4_1; }
		
		//Subcategory
		public RuleCall getSubCategoriesSubcategoryParserRuleCall_4_1_0() { return cSubCategoriesSubcategoryParserRuleCall_4_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class SubcategoryElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "bimMixer.BIMMixerApp.Subcategory");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cSubcategoryAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cTextKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cTextAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cTextEStringParserRuleCall_3_1_0 = (RuleCall)cTextAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cPointsKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cPointsAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cPointsEFloatParserRuleCall_4_1_0 = (RuleCall)cPointsAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cObtainedPointsKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cObtainedPointsAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cObtainedPointsEFloatParserRuleCall_5_1_0 = (RuleCall)cObtainedPointsAssignment_5_1.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cConnectionKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cConnectionAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final CrossReference cConnectionSubcategoryCrossReference_6_1_0 = (CrossReference)cConnectionAssignment_6_1.eContents().get(0);
		private final RuleCall cConnectionSubcategoryEStringParserRuleCall_6_1_0_1 = (RuleCall)cConnectionSubcategoryCrossReference_6_1_0.eContents().get(1);
		private final Assignment cRequiredAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final Keyword cRequiredRequiredKeyword_7_0 = (Keyword)cRequiredAssignment_7.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//Subcategory:
		//	{Subcategory} name=EString
		//	'{' ('text:' text=EString)? ('points:' points=EFloat)? ('obtainedPoints:' obtainedPoints=EFloat)? ('connection:'
		//	connection=[Subcategory|EString])?
		//	required?='required'?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Subcategory} name=EString '{' ('text:' text=EString)? ('points:' points=EFloat)? ('obtainedPoints:'
		//obtainedPoints=EFloat)? ('connection:' connection=[Subcategory|EString])? required?='required'? '}'
		public Group getGroup() { return cGroup; }
		
		//{Subcategory}
		public Action getSubcategoryAction_0() { return cSubcategoryAction_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('text:' text=EString)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'text:'
		public Keyword getTextKeyword_3_0() { return cTextKeyword_3_0; }
		
		//text=EString
		public Assignment getTextAssignment_3_1() { return cTextAssignment_3_1; }
		
		//EString
		public RuleCall getTextEStringParserRuleCall_3_1_0() { return cTextEStringParserRuleCall_3_1_0; }
		
		//('points:' points=EFloat)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'points:'
		public Keyword getPointsKeyword_4_0() { return cPointsKeyword_4_0; }
		
		//points=EFloat
		public Assignment getPointsAssignment_4_1() { return cPointsAssignment_4_1; }
		
		//EFloat
		public RuleCall getPointsEFloatParserRuleCall_4_1_0() { return cPointsEFloatParserRuleCall_4_1_0; }
		
		//('obtainedPoints:' obtainedPoints=EFloat)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'obtainedPoints:'
		public Keyword getObtainedPointsKeyword_5_0() { return cObtainedPointsKeyword_5_0; }
		
		//obtainedPoints=EFloat
		public Assignment getObtainedPointsAssignment_5_1() { return cObtainedPointsAssignment_5_1; }
		
		//EFloat
		public RuleCall getObtainedPointsEFloatParserRuleCall_5_1_0() { return cObtainedPointsEFloatParserRuleCall_5_1_0; }
		
		//('connection:' connection=[Subcategory|EString])?
		public Group getGroup_6() { return cGroup_6; }
		
		//'connection:'
		public Keyword getConnectionKeyword_6_0() { return cConnectionKeyword_6_0; }
		
		//connection=[Subcategory|EString]
		public Assignment getConnectionAssignment_6_1() { return cConnectionAssignment_6_1; }
		
		//[Subcategory|EString]
		public CrossReference getConnectionSubcategoryCrossReference_6_1_0() { return cConnectionSubcategoryCrossReference_6_1_0; }
		
		//EString
		public RuleCall getConnectionSubcategoryEStringParserRuleCall_6_1_0_1() { return cConnectionSubcategoryEStringParserRuleCall_6_1_0_1; }
		
		//required?='required'?
		public Assignment getRequiredAssignment_7() { return cRequiredAssignment_7; }
		
		//'required'
		public Keyword getRequiredRequiredKeyword_7_0() { return cRequiredRequiredKeyword_7_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
	}
	public class EStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "bimMixer.BIMMixerApp.EString");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//EString:
		//	STRING | ID;
		@Override public ParserRule getRule() { return rule; }
		
		//STRING | ID
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//STRING
		public RuleCall getSTRINGTerminalRuleCall_0() { return cSTRINGTerminalRuleCall_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_1() { return cIDTerminalRuleCall_1; }
	}
	public class EFloatElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "bimMixer.BIMMixerApp.EFloat");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cINTTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cFullStopKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final RuleCall cINTTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Alternatives cAlternatives_4_0 = (Alternatives)cGroup_4.eContents().get(0);
		private final Keyword cEKeyword_4_0_0 = (Keyword)cAlternatives_4_0.eContents().get(0);
		private final Keyword cEKeyword_4_0_1 = (Keyword)cAlternatives_4_0.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final RuleCall cINTTerminalRuleCall_4_2 = (RuleCall)cGroup_4.eContents().get(2);
		
		//EFloat ecore::EFloat:
		//	'-'? INT? '.' INT (('E' | 'e') '-'? INT)?;
		@Override public ParserRule getRule() { return rule; }
		
		//'-'? INT? '.' INT (('E' | 'e') '-'? INT)?
		public Group getGroup() { return cGroup; }
		
		//'-'?
		public Keyword getHyphenMinusKeyword_0() { return cHyphenMinusKeyword_0; }
		
		//INT?
		public RuleCall getINTTerminalRuleCall_1() { return cINTTerminalRuleCall_1; }
		
		//'.'
		public Keyword getFullStopKeyword_2() { return cFullStopKeyword_2; }
		
		//INT
		public RuleCall getINTTerminalRuleCall_3() { return cINTTerminalRuleCall_3; }
		
		//(('E' | 'e') '-'? INT)?
		public Group getGroup_4() { return cGroup_4; }
		
		//('E' | 'e')
		public Alternatives getAlternatives_4_0() { return cAlternatives_4_0; }
		
		//'E'
		public Keyword getEKeyword_4_0_0() { return cEKeyword_4_0_0; }
		
		//'e'
		public Keyword getEKeyword_4_0_1() { return cEKeyword_4_0_1; }
		
		//'-'?
		public Keyword getHyphenMinusKeyword_4_1() { return cHyphenMinusKeyword_4_1; }
		
		//INT
		public RuleCall getINTTerminalRuleCall_4_2() { return cINTTerminalRuleCall_4_2; }
	}
	public class EBooleanElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "bimMixer.BIMMixerApp.EBoolean");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cTrueKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cFalseKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		
		//EBoolean ecore::EBoolean:
		//	'true' | 'false';
		@Override public ParserRule getRule() { return rule; }
		
		//'true' | 'false'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'true'
		public Keyword getTrueKeyword_0() { return cTrueKeyword_0; }
		
		//'false'
		public Keyword getFalseKeyword_1() { return cFalseKeyword_1; }
	}
	
	
	private final BIMMixerAppElements pBIMMixerApp;
	private final BIMCertificationElements pBIMCertification;
	private final BreeamCertificationElements pBreeamCertification;
	private final LEEDCertificationElements pLEEDCertification;
	private final CategoryElements pCategory;
	private final SubcategoryElements pSubcategory;
	private final EStringElements pEString;
	private final EFloatElements pEFloat;
	private final EBooleanElements pEBoolean;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public BIMMixerAppGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pBIMMixerApp = new BIMMixerAppElements();
		this.pBIMCertification = new BIMCertificationElements();
		this.pBreeamCertification = new BreeamCertificationElements();
		this.pLEEDCertification = new LEEDCertificationElements();
		this.pCategory = new CategoryElements();
		this.pSubcategory = new SubcategoryElements();
		this.pEString = new EStringElements();
		this.pEFloat = new EFloatElements();
		this.pEBoolean = new EBooleanElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("bimMixer.BIMMixerApp".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//BIMMixerApp:
	//	{BIMMixerApp}
	//	'BIMMixerApp'
	//	name=EString
	//	':' (certifications+=BIMCertification certifications+=BIMCertification*)?;
	public BIMMixerAppElements getBIMMixerAppAccess() {
		return pBIMMixerApp;
	}
	
	public ParserRule getBIMMixerAppRule() {
		return getBIMMixerAppAccess().getRule();
	}
	
	//BIMCertification:
	//	BreeamCertification | LEEDCertification;
	public BIMCertificationElements getBIMCertificationAccess() {
		return pBIMCertification;
	}
	
	public ParserRule getBIMCertificationRule() {
		return getBIMCertificationAccess().getRule();
	}
	
	//BreeamCertification:
	//	'BreeamCertification'
	//	name=EString
	//	'{'
	//	Categories+=Category ("," Categories+=Category)* ('connectedCertification:'
	//	connectedCertification=[BIMCertification|EString])?
	//	'}';
	public BreeamCertificationElements getBreeamCertificationAccess() {
		return pBreeamCertification;
	}
	
	public ParserRule getBreeamCertificationRule() {
		return getBreeamCertificationAccess().getRule();
	}
	
	//LEEDCertification:
	//	'LEEDCertification'
	//	name=EString
	//	'{'
	//	Categories+=Category ("," Categories+=Category)* ('connectedCertification:'
	//	connectedCertification=[BIMCertification|EString])?
	//	'}';
	public LEEDCertificationElements getLEEDCertificationAccess() {
		return pLEEDCertification;
	}
	
	public ParserRule getLEEDCertificationRule() {
		return getLEEDCertificationAccess().getRule();
	}
	
	//Category:
	//	'Category'
	//	name=EString
	//	'{'
	//	subCategories+=Subcategory ("," subCategories+=Subcategory)*
	//	'}';
	public CategoryElements getCategoryAccess() {
		return pCategory;
	}
	
	public ParserRule getCategoryRule() {
		return getCategoryAccess().getRule();
	}
	
	//Subcategory:
	//	{Subcategory} name=EString
	//	'{' ('text:' text=EString)? ('points:' points=EFloat)? ('obtainedPoints:' obtainedPoints=EFloat)? ('connection:'
	//	connection=[Subcategory|EString])?
	//	required?='required'?
	//	'}';
	public SubcategoryElements getSubcategoryAccess() {
		return pSubcategory;
	}
	
	public ParserRule getSubcategoryRule() {
		return getSubcategoryAccess().getRule();
	}
	
	//EString:
	//	STRING | ID;
	public EStringElements getEStringAccess() {
		return pEString;
	}
	
	public ParserRule getEStringRule() {
		return getEStringAccess().getRule();
	}
	
	//EFloat ecore::EFloat:
	//	'-'? INT? '.' INT (('E' | 'e') '-'? INT)?;
	public EFloatElements getEFloatAccess() {
		return pEFloat;
	}
	
	public ParserRule getEFloatRule() {
		return getEFloatAccess().getRule();
	}
	
	//EBoolean ecore::EBoolean:
	//	'true' | 'false';
	public EBooleanElements getEBooleanAccess() {
		return pEBoolean;
	}
	
	public ParserRule getEBooleanRule() {
		return getEBooleanAccess().getRule();
	}
	
	//terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt:
	//	'0'..'9'+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//	'"' ('\\' . | !('\\' | '"'))* '"' |
	//	"'" ('\\' . | !('\\' | "'"))* "'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT:
	//	'/*'->'*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
