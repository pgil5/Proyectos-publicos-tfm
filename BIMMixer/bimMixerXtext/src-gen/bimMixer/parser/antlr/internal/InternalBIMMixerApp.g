/*
 * generated by Xtext 2.23.0
 */
grammar InternalBIMMixerApp;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package bimMixer.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package bimMixer.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import bimMixer.services.BIMMixerAppGrammarAccess;

}

@parser::members {

 	private BIMMixerAppGrammarAccess grammarAccess;

    public InternalBIMMixerAppParser(TokenStream input, BIMMixerAppGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "BIMMixerApp";
   	}

   	@Override
   	protected BIMMixerAppGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleBIMMixerApp
entryRuleBIMMixerApp returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBIMMixerAppRule()); }
	iv_ruleBIMMixerApp=ruleBIMMixerApp
	{ $current=$iv_ruleBIMMixerApp.current; }
	EOF;

// Rule BIMMixerApp
ruleBIMMixerApp returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getBIMMixerAppAccess().getBIMMixerAppAction_0(),
					$current);
			}
		)
		otherlv_1='BIMMixerApp'
		{
			newLeafNode(otherlv_1, grammarAccess.getBIMMixerAppAccess().getBIMMixerAppKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBIMMixerAppAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_name_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBIMMixerAppRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"bimMixer.BIMMixerApp.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=':'
		{
			newLeafNode(otherlv_3, grammarAccess.getBIMMixerAppAccess().getColonKeyword_3());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getBIMMixerAppAccess().getCertificationsBIMCertificationParserRuleCall_4_0_0());
					}
					lv_certifications_4_0=ruleBIMCertification
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBIMMixerAppRule());
						}
						add(
							$current,
							"certifications",
							lv_certifications_4_0,
							"bimMixer.BIMMixerApp.BIMCertification");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getBIMMixerAppAccess().getCertificationsBIMCertificationParserRuleCall_4_1_0());
					}
					lv_certifications_5_0=ruleBIMCertification
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBIMMixerAppRule());
						}
						add(
							$current,
							"certifications",
							lv_certifications_5_0,
							"bimMixer.BIMMixerApp.BIMCertification");
						afterParserOrEnumRuleCall();
					}
				)
			)*
		)?
	)
;

// Entry rule entryRuleBIMCertification
entryRuleBIMCertification returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBIMCertificationRule()); }
	iv_ruleBIMCertification=ruleBIMCertification
	{ $current=$iv_ruleBIMCertification.current; }
	EOF;

// Rule BIMCertification
ruleBIMCertification returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getBIMCertificationAccess().getBreeamCertificationParserRuleCall_0());
		}
		this_BreeamCertification_0=ruleBreeamCertification
		{
			$current = $this_BreeamCertification_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getBIMCertificationAccess().getLEEDCertificationParserRuleCall_1());
		}
		this_LEEDCertification_1=ruleLEEDCertification
		{
			$current = $this_LEEDCertification_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleBreeamCertification
entryRuleBreeamCertification returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBreeamCertificationRule()); }
	iv_ruleBreeamCertification=ruleBreeamCertification
	{ $current=$iv_ruleBreeamCertification.current; }
	EOF;

// Rule BreeamCertification
ruleBreeamCertification returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='BreeamCertification'
		{
			newLeafNode(otherlv_0, grammarAccess.getBreeamCertificationAccess().getBreeamCertificationKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBreeamCertificationAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBreeamCertificationRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"bimMixer.BIMMixerApp.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getBreeamCertificationAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBreeamCertificationAccess().getCategoriesCategoryParserRuleCall_3_0());
				}
				lv_Categories_3_0=ruleCategory
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBreeamCertificationRule());
					}
					add(
						$current,
						"Categories",
						lv_Categories_3_0,
						"bimMixer.BIMMixerApp.Category");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4=','
			{
				newLeafNode(otherlv_4, grammarAccess.getBreeamCertificationAccess().getCommaKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getBreeamCertificationAccess().getCategoriesCategoryParserRuleCall_4_1_0());
					}
					lv_Categories_5_0=ruleCategory
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBreeamCertificationRule());
						}
						add(
							$current,
							"Categories",
							lv_Categories_5_0,
							"bimMixer.BIMMixerApp.Category");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		(
			otherlv_6='connectedCertification:'
			{
				newLeafNode(otherlv_6, grammarAccess.getBreeamCertificationAccess().getConnectedCertificationKeyword_5_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getBreeamCertificationRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getBreeamCertificationAccess().getConnectedCertificationBIMCertificationCrossReference_5_1_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_8='}'
		{
			newLeafNode(otherlv_8, grammarAccess.getBreeamCertificationAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleLEEDCertification
entryRuleLEEDCertification returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLEEDCertificationRule()); }
	iv_ruleLEEDCertification=ruleLEEDCertification
	{ $current=$iv_ruleLEEDCertification.current; }
	EOF;

// Rule LEEDCertification
ruleLEEDCertification returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='LEEDCertification'
		{
			newLeafNode(otherlv_0, grammarAccess.getLEEDCertificationAccess().getLEEDCertificationKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLEEDCertificationAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLEEDCertificationRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"bimMixer.BIMMixerApp.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getLEEDCertificationAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLEEDCertificationAccess().getCategoriesCategoryParserRuleCall_3_0());
				}
				lv_Categories_3_0=ruleCategory
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLEEDCertificationRule());
					}
					add(
						$current,
						"Categories",
						lv_Categories_3_0,
						"bimMixer.BIMMixerApp.Category");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4=','
			{
				newLeafNode(otherlv_4, grammarAccess.getLEEDCertificationAccess().getCommaKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getLEEDCertificationAccess().getCategoriesCategoryParserRuleCall_4_1_0());
					}
					lv_Categories_5_0=ruleCategory
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLEEDCertificationRule());
						}
						add(
							$current,
							"Categories",
							lv_Categories_5_0,
							"bimMixer.BIMMixerApp.Category");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		(
			otherlv_6='connectedCertification:'
			{
				newLeafNode(otherlv_6, grammarAccess.getLEEDCertificationAccess().getConnectedCertificationKeyword_5_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getLEEDCertificationRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getLEEDCertificationAccess().getConnectedCertificationBIMCertificationCrossReference_5_1_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_8='}'
		{
			newLeafNode(otherlv_8, grammarAccess.getLEEDCertificationAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleCategory
entryRuleCategory returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCategoryRule()); }
	iv_ruleCategory=ruleCategory
	{ $current=$iv_ruleCategory.current; }
	EOF;

// Rule Category
ruleCategory returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Category'
		{
			newLeafNode(otherlv_0, grammarAccess.getCategoryAccess().getCategoryKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCategoryAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCategoryRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"bimMixer.BIMMixerApp.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getCategoryAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCategoryAccess().getSubCategoriesSubcategoryParserRuleCall_3_0());
				}
				lv_subCategories_3_0=ruleSubcategory
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCategoryRule());
					}
					add(
						$current,
						"subCategories",
						lv_subCategories_3_0,
						"bimMixer.BIMMixerApp.Subcategory");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4=','
			{
				newLeafNode(otherlv_4, grammarAccess.getCategoryAccess().getCommaKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCategoryAccess().getSubCategoriesSubcategoryParserRuleCall_4_1_0());
					}
					lv_subCategories_5_0=ruleSubcategory
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCategoryRule());
						}
						add(
							$current,
							"subCategories",
							lv_subCategories_5_0,
							"bimMixer.BIMMixerApp.Subcategory");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getCategoryAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleSubcategory
entryRuleSubcategory returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSubcategoryRule()); }
	iv_ruleSubcategory=ruleSubcategory
	{ $current=$iv_ruleSubcategory.current; }
	EOF;

// Rule Subcategory
ruleSubcategory returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getSubcategoryAccess().getSubcategoryAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getSubcategoryAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSubcategoryRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"bimMixer.BIMMixerApp.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getSubcategoryAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='text:'
			{
				newLeafNode(otherlv_3, grammarAccess.getSubcategoryAccess().getTextKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSubcategoryAccess().getTextEStringParserRuleCall_3_1_0());
					}
					lv_text_4_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSubcategoryRule());
						}
						set(
							$current,
							"text",
							lv_text_4_0,
							"bimMixer.BIMMixerApp.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_5='points:'
			{
				newLeafNode(otherlv_5, grammarAccess.getSubcategoryAccess().getPointsKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSubcategoryAccess().getPointsEFloatParserRuleCall_4_1_0());
					}
					lv_points_6_0=ruleEFloat
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSubcategoryRule());
						}
						set(
							$current,
							"points",
							lv_points_6_0,
							"bimMixer.BIMMixerApp.EFloat");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_7='obtainedPoints:'
			{
				newLeafNode(otherlv_7, grammarAccess.getSubcategoryAccess().getObtainedPointsKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSubcategoryAccess().getObtainedPointsEFloatParserRuleCall_5_1_0());
					}
					lv_obtainedPoints_8_0=ruleEFloat
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSubcategoryRule());
						}
						set(
							$current,
							"obtainedPoints",
							lv_obtainedPoints_8_0,
							"bimMixer.BIMMixerApp.EFloat");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_9='connection:'
			{
				newLeafNode(otherlv_9, grammarAccess.getSubcategoryAccess().getConnectionKeyword_6_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSubcategoryRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getSubcategoryAccess().getConnectionSubcategoryCrossReference_6_1_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			(
				lv_required_11_0='required'
				{
					newLeafNode(lv_required_11_0, grammarAccess.getSubcategoryAccess().getRequiredRequiredKeyword_7_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSubcategoryRule());
					}
					setWithLastConsumed($current, "required", lv_required_11_0 != null, "required");
				}
			)
		)?
		otherlv_12='}'
		{
			newLeafNode(otherlv_12, grammarAccess.getSubcategoryAccess().getRightCurlyBracketKeyword_8());
		}
	)
;

// Entry rule entryRuleEString
entryRuleEString returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEStringRule()); }
	iv_ruleEString=ruleEString
	{ $current=$iv_ruleEString.current.getText(); }
	EOF;

// Rule EString
ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_STRING_0=RULE_STRING
		{
			$current.merge(this_STRING_0);
		}
		{
			newLeafNode(this_STRING_0, grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0());
		}
		    |
		this_ID_1=RULE_ID
		{
			$current.merge(this_ID_1);
		}
		{
			newLeafNode(this_ID_1, grammarAccess.getEStringAccess().getIDTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleEFloat
entryRuleEFloat returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEFloatRule()); }
	iv_ruleEFloat=ruleEFloat
	{ $current=$iv_ruleEFloat.current.getText(); }
	EOF;

// Rule EFloat
ruleEFloat returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			kw='-'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getEFloatAccess().getHyphenMinusKeyword_0());
			}
		)?
		(
			this_INT_1=RULE_INT
			{
				$current.merge(this_INT_1);
			}
			{
				newLeafNode(this_INT_1, grammarAccess.getEFloatAccess().getINTTerminalRuleCall_1());
			}
		)?
		kw='.'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEFloatAccess().getFullStopKeyword_2());
		}
		this_INT_3=RULE_INT
		{
			$current.merge(this_INT_3);
		}
		{
			newLeafNode(this_INT_3, grammarAccess.getEFloatAccess().getINTTerminalRuleCall_3());
		}
		(
			(
				kw='E'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getEFloatAccess().getEKeyword_4_0_0());
				}
				    |
				kw='e'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getEFloatAccess().getEKeyword_4_0_1());
				}
			)
			(
				kw='-'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getEFloatAccess().getHyphenMinusKeyword_4_1());
				}
			)?
			this_INT_7=RULE_INT
			{
				$current.merge(this_INT_7);
			}
			{
				newLeafNode(this_INT_7, grammarAccess.getEFloatAccess().getINTTerminalRuleCall_4_2());
			}
		)?
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
